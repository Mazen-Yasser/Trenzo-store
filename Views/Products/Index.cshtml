@model IEnumerable<TrenzoStore.Models.Entities.Product>
@{
    ViewData["Title"] = "Products";
    var categories = ViewData["Categories"] as IEnumerable<TrenzoStore.Models.Entities.Category>;
    var currentPage = (int)(ViewData["CurrentPage"] ?? 1);
    var totalPages = (int)(ViewData["TotalPages"] ?? 1);
    var hasPreviousPage = (bool)(ViewData["HasPreviousPage"] ?? false);
    var hasNextPage = (bool)(ViewData["HasNextPage"] ?? false);
    var currentCategory = ViewData["CurrentCategory"] as string;
    var currentSearch = ViewData["CurrentSearch"] as string;
}

<div class="container-fluid">
    <!-- Hero Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="bg-dark text-white p-5 rounded">
                <div class="text-center">
                    <h1 class="display-4 fw-bold">Welcome to Trenzo Store</h1>
                    <p class="lead">Discover the latest fashion trends and timeless classics</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Sidebar Filters -->
        <div class="col-lg-3 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Categories</h5>
                </div>
                <div class="card-body">
                    <div class="list-group list-group-flush">
                        <a asp-action="Index" class="list-group-item list-group-item-action @(string.IsNullOrEmpty(currentCategory) ? "active" : "")">
                            All Products
                        </a>
                        @if (categories != null)
                        {
                            @foreach (var category in categories)
                            {
                                <a asp-action="Index" asp-route-category="@category.Name.ToLower()" 
                                   class="list-group-item list-group-item-action @(currentCategory?.ToLower() == category.Name.ToLower() ? "active" : "")">
                                    @category.Name
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9">
            <!-- Search Results Header -->
            @if (!string.IsNullOrEmpty(currentSearch))
            {
                <div class="alert alert-info">
                    <i class="fas fa-search me-2"></i>Search results for: <strong>@currentSearch</strong>
                </div>
            }
            @if (!string.IsNullOrEmpty(currentCategory))
            {
                <div class="alert alert-primary">
                    <i class="fas fa-tag me-2"></i>Category: <strong>@currentCategory</strong>
                </div>
            }

            <!-- Products -->
            @if (Model.Any())
            {
                <div class="row">
                    @foreach (var product in Model)
                    {
                        <div class="col-md-4 col-sm-6 mb-4">
                            <div class="card h-100 shadow-sm product-card">
                                <div class="position-relative">
                                    @{
                                        var primaryImage = product.Images.FirstOrDefault(i => i.IsPrimary) ?? product.Images.FirstOrDefault();
                                        var imageUrl = primaryImage?.ImageUrl ?? "/images/placeholder-product.jpg";
                                    }
                                    <img src="@imageUrl" class="card-img-top" alt="@product.Name" style="height: 250px; object-fit: cover;">
                                    
                                    @if (product.CompareAtPrice.HasValue && product.CompareAtPrice > product.Price)
                                    {
                                        <span class="badge bg-danger position-absolute top-0 end-0 m-2">
                                            Sale
                                        </span>
                                    }
                                    @if (product.IsFeatured)
                                    {
                                        <span class="badge bg-warning position-absolute top-0 start-0 m-2">
                                            Featured
                                        </span>
                                    }
                                </div>
                                
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text text-muted flex-grow-1">@product.ShortDescription</p>
                                    
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <div>
                                                @if (product.CompareAtPrice.HasValue && product.CompareAtPrice > product.Price)
                                                {
                                                    <span class="text-muted text-decoration-line-through me-2">$@product.CompareAtPrice.Value.ToString("F2")</span>
                                                }
                                                <span class="h5 text-primary mb-0">$@product.Price.ToString("F2")</span>
                                            </div>
                                            <small class="text-muted">
                                                @if (product.StockQuantity > 0)
                                                {
                                                    <span><i class="fas fa-check-circle text-success"></i> In Stock</span>
                                                }
                                                else
                                                {
                                                    <span><i class="fas fa-times-circle text-danger"></i> Out of Stock</span>
                                                }
                                            </small>
                                        </div>
                                        
                                        <div class="d-grid gap-2">
                                            <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-dark">
                                                <i class="fas fa-eye me-2"></i>View Details
                                            </a>
                                            @if (product.StockQuantity > 0)
                                            {
                                                <button class="btn btn-dark add-to-cart-btn" data-product-id="@product.Id">
                                                    <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (totalPages > 1)
                {
                    <nav aria-label="Products pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(!hasPreviousPage ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-category="@currentCategory" asp-route-search="@currentSearch">
                                    <i class="fas fa-chevron-left"></i> Previous
                                </a>
                            </li>
                            
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-category="@currentCategory" asp-route-search="@currentSearch">@i</a>
                                </li>
                            }
                            
                            <li class="page-item @(!hasNextPage ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-category="@currentCategory" asp-route-search="@currentSearch">
                                    Next <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h3>No products found</h3>
                    <p class="text-muted">Try adjusting your search criteria or browse all products.</p>
                    <a asp-action="Index" class="btn btn-dark">View All Products</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.add-to-cart-btn').click(function() {
                var productId = $(this).data('product-id');
                var button = $(this);
                
                button.prop('disabled', true);
                button.html('<i class="fas fa-spinner fa-spin me-2"></i>Adding...');
                
                $.post('/cart/add', {
                    productId: productId,
                    quantity: 1,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(data) {
                    if (data.success) {
                        button.html('<i class="fas fa-check me-2"></i>Added!');
                        button.removeClass('btn-dark').addClass('btn-success');
                        updateCartCount();
                        
                        setTimeout(function() {
                            button.html('<i class="fas fa-shopping-cart me-2"></i>Add to Cart');
                            button.removeClass('btn-success').addClass('btn-dark');
                            button.prop('disabled', false);
                        }, 2000);
                    } else {
                        alert('Error: ' + data.message);
                        button.html('<i class="fas fa-shopping-cart me-2"></i>Add to Cart');
                        button.prop('disabled', false);
                    }
                })
                .fail(function() {
                    alert('An error occurred. Please try again.');
                    button.html('<i class="fas fa-shopping-cart me-2"></i>Add to Cart');
                    button.prop('disabled', false);
                });
            });
        });
    </script>
}

<style>
    .product-card {
        transition: transform 0.2s;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
    }
</style>
